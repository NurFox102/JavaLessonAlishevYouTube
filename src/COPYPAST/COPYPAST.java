package COPYPAST;

import ClassAndOBJECTS.Class_And_Objects;
import MultidimensionalARRAY.Multidimensional_Array;
import SWITCH.Switch_illustration;
import FOREACH.Foreach_illustration;


public class COPYPAST {
    public void method_COPYPAST() {

//_________________________________________________________________________________________________________
// !!! Мне приходится писать методы в классе, т.к. в противном случае, мне всё подсвечивается красным.
//_________________________________________________________________________________________________________


//_________________________________________________________________________________________________________
      /*Switch_illustration switchIllustration = new Switch_illustration();
        switchIllustration.myMethod();

        // Вызываем метод из класса Switch_illustration , где используется оператор switch.
        Оператор switch можно использовать только для приметивных типов (char? enum, byte, short,
        int, long, shar и String)*/
//_________________________________________________________________________________________________________


//_________________________________________________________________________________________________________
      /*Foreach_illustration foreachIllustration = new Foreach_illustration();
        foreachIllustration.myMethod();

        // Вызываем метод из класса Foreach_illustration , где используется цикл for each.
        Оператор for each лучше всего использовать для перебора массивов.*/
//_________________________________________________________________________________________________________


//_________________________________________________________________________________________________________
      /*Multidimensional_Array multidimensionalArray = new Multidimensional_Array();
        multidimensionalArray.myMethod();

        // Вызываем метод из класса Multidimensional_Array ,где используется двухмерный массив.
        Обрати внимание на то, как обращаться к массиву.*/
//_________________________________________________________________________________________________________


//_________________________________________________________________________________________________________
      /*Class_And_Objects classAndObjects= new Class_And_Objects();
        classAndObjects.myMethod();

        // Вызываем метод из класса Class_And_Objects , где мы создаём АБСТРАКТНЫЙ КЛАСС Person и в
        классе Class_And_Objects создаём объект класса Person.*/
//_________________________________________________________________________________________________________


//_________________________________________________________________________________________________________


    }
}
